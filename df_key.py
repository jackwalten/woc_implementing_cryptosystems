# DF Key Exchange
import random

class df_key:
    def __init__(self,g,p):
        self.g = g
        self.p = p

    def gen_privkey(self):
        # This number is kept private
        self.priv_key = random.randrange(start = 1,stop = self.p)

    def gen_pubkey(self):
        self.pub_key = pow(self.g,self.priv_key,self.p)

    def share_key(self,other_pub):
        self.share_key = pow(other_pub,self.priv_key,self.p)

# Two prime numbers are decided unanimously by Alice and Bob and they are public.
# p = any prime number > 2 and g = a primitive root of p (also called a generator)

g, p = 5, 23
Alice = df_key(g,p)
Bob = df_key(g,p)

print("The value of prime p:", p)
print("The value of generator g:", g)
print()

Alice.gen_privkey()
Bob.gen_privkey()

print("The private key a for Alice:",Alice.priv_key)
print("The private key b for Bob:",Bob.priv_key)
print()

Alice.gen_pubkey()
Bob.gen_pubkey()

print("The public key A for Alice:",Alice.pub_key)
print("The public key B for Bob:",Bob.pub_key)
print()

Alice.share_key(Bob.pub_key)
Bob.share_key(Alice.pub_key)

print("The shared secret s generated by Alice:",Alice.share_key)
print("The shared secret s generated by Bob:",Bob.share_key)
